; This file was auto-generated by lbstanza-wrapper
; Version 0.3.0
; Manual editing would be unwise
defpackage z3/Enums/Z3_ast_kind :
  import core

public deftype Z3_ast_kind <: Equalable
public deftype Z3_NUMERAL_AST <: Z3_ast_kind
public deftype Z3_APP_AST <: Z3_ast_kind
public deftype Z3_VAR_AST <: Z3_ast_kind
public deftype Z3_QUANTIFIER_AST <: Z3_ast_kind
public deftype Z3_SORT_AST <: Z3_ast_kind
public deftype Z3_FUNC_DECL_AST <: Z3_ast_kind
public deftype Z3_UNKNOWN_AST <: Z3_ast_kind

public val Z3_NUMERAL_AST = new Z3_NUMERAL_AST
public val Z3_APP_AST = new Z3_APP_AST
public val Z3_VAR_AST = new Z3_VAR_AST
public val Z3_QUANTIFIER_AST = new Z3_QUANTIFIER_AST
public val Z3_SORT_AST = new Z3_SORT_AST
public val Z3_FUNC_DECL_AST = new Z3_FUNC_DECL_AST
public val Z3_UNKNOWN_AST = new Z3_UNKNOWN_AST

public defn to-int (v:Z3_ast_kind) -> Int:
  match(v) :
    (x:Z3_NUMERAL_AST) : 0
    (x:Z3_APP_AST) : 1
    (x:Z3_VAR_AST) : 2
    (x:Z3_QUANTIFIER_AST) : 3
    (x:Z3_SORT_AST) : 4
    (x:Z3_FUNC_DECL_AST) : 5
    (x:Z3_UNKNOWN_AST) : 1000

public defn Z3_ast_kind (v:Int) -> Z3_ast_kind :
  switch {v == _}:
    0 : Z3_NUMERAL_AST
    1 : Z3_APP_AST
    2 : Z3_VAR_AST
    3 : Z3_QUANTIFIER_AST
    4 : Z3_SORT_AST
    5 : Z3_FUNC_DECL_AST
    1000 : Z3_UNKNOWN_AST
    else: throw(Exception("Z3_ast_kind: Invalid Enum Value: %_" % [v]))

public lostanza defn Z3_ast_kind (v:int) -> ref<Z3_ast_kind> :
  return Z3_ast_kind(new Int{v})

public defmethod print (o:OutputStream, v:Z3_ast_kind) :
  match(v) :
    (x:Z3_NUMERAL_AST) : print(o, "Z3_NUMERAL_AST")
    (x:Z3_APP_AST) : print(o, "Z3_APP_AST")
    (x:Z3_VAR_AST) : print(o, "Z3_VAR_AST")
    (x:Z3_QUANTIFIER_AST) : print(o, "Z3_QUANTIFIER_AST")
    (x:Z3_SORT_AST) : print(o, "Z3_SORT_AST")
    (x:Z3_FUNC_DECL_AST) : print(o, "Z3_FUNC_DECL_AST")
    (x:Z3_UNKNOWN_AST) : print(o, "Z3_UNKNOWN_AST")

public defmethod equal? (a:Z3_ast_kind, b:Z3_ast_kind) -> True|False :
  to-int(a) == to-int(b)

