; This file was auto-generated by lbstanza-wrapper
; Version 0.3.0
; Manual editing would be unwise
defpackage z3/Enums/Z3_sort_kind :
  import core

public deftype Z3_sort_kind <: Equalable
public deftype Z3_UNINTERPRETED_SORT <: Z3_sort_kind
public deftype Z3_BOOL_SORT <: Z3_sort_kind
public deftype Z3_INT_SORT <: Z3_sort_kind
public deftype Z3_REAL_SORT <: Z3_sort_kind
public deftype Z3_BV_SORT <: Z3_sort_kind
public deftype Z3_ARRAY_SORT <: Z3_sort_kind
public deftype Z3_DATATYPE_SORT <: Z3_sort_kind
public deftype Z3_RELATION_SORT <: Z3_sort_kind
public deftype Z3_FINITE_DOMAIN_SORT <: Z3_sort_kind
public deftype Z3_FLOATING_POINT_SORT <: Z3_sort_kind
public deftype Z3_ROUNDING_MODE_SORT <: Z3_sort_kind
public deftype Z3_SEQ_SORT <: Z3_sort_kind
public deftype Z3_RE_SORT <: Z3_sort_kind
public deftype Z3_CHAR_SORT <: Z3_sort_kind
public deftype Z3_UNKNOWN_SORT <: Z3_sort_kind

public val Z3_UNINTERPRETED_SORT = new Z3_UNINTERPRETED_SORT
public val Z3_BOOL_SORT = new Z3_BOOL_SORT
public val Z3_INT_SORT = new Z3_INT_SORT
public val Z3_REAL_SORT = new Z3_REAL_SORT
public val Z3_BV_SORT = new Z3_BV_SORT
public val Z3_ARRAY_SORT = new Z3_ARRAY_SORT
public val Z3_DATATYPE_SORT = new Z3_DATATYPE_SORT
public val Z3_RELATION_SORT = new Z3_RELATION_SORT
public val Z3_FINITE_DOMAIN_SORT = new Z3_FINITE_DOMAIN_SORT
public val Z3_FLOATING_POINT_SORT = new Z3_FLOATING_POINT_SORT
public val Z3_ROUNDING_MODE_SORT = new Z3_ROUNDING_MODE_SORT
public val Z3_SEQ_SORT = new Z3_SEQ_SORT
public val Z3_RE_SORT = new Z3_RE_SORT
public val Z3_CHAR_SORT = new Z3_CHAR_SORT
public val Z3_UNKNOWN_SORT = new Z3_UNKNOWN_SORT

public defn to-int (v:Z3_sort_kind) -> Int:
  match(v) :
    (x:Z3_UNINTERPRETED_SORT) : 0
    (x:Z3_BOOL_SORT) : 1
    (x:Z3_INT_SORT) : 2
    (x:Z3_REAL_SORT) : 3
    (x:Z3_BV_SORT) : 4
    (x:Z3_ARRAY_SORT) : 5
    (x:Z3_DATATYPE_SORT) : 6
    (x:Z3_RELATION_SORT) : 7
    (x:Z3_FINITE_DOMAIN_SORT) : 8
    (x:Z3_FLOATING_POINT_SORT) : 9
    (x:Z3_ROUNDING_MODE_SORT) : 10
    (x:Z3_SEQ_SORT) : 11
    (x:Z3_RE_SORT) : 12
    (x:Z3_CHAR_SORT) : 13
    (x:Z3_UNKNOWN_SORT) : 1000

public defn Z3_sort_kind (v:Int) -> Z3_sort_kind :
  switch {v == _}:
    0 : Z3_UNINTERPRETED_SORT
    1 : Z3_BOOL_SORT
    2 : Z3_INT_SORT
    3 : Z3_REAL_SORT
    4 : Z3_BV_SORT
    5 : Z3_ARRAY_SORT
    6 : Z3_DATATYPE_SORT
    7 : Z3_RELATION_SORT
    8 : Z3_FINITE_DOMAIN_SORT
    9 : Z3_FLOATING_POINT_SORT
    10 : Z3_ROUNDING_MODE_SORT
    11 : Z3_SEQ_SORT
    12 : Z3_RE_SORT
    13 : Z3_CHAR_SORT
    1000 : Z3_UNKNOWN_SORT
    else: throw(Exception("Z3_sort_kind: Invalid Enum Value: %_" % [v]))

public lostanza defn Z3_sort_kind (v:int) -> ref<Z3_sort_kind> :
  return Z3_sort_kind(new Int{v})

public defmethod print (o:OutputStream, v:Z3_sort_kind) :
  match(v) :
    (x:Z3_UNINTERPRETED_SORT) : print(o, "Z3_UNINTERPRETED_SORT")
    (x:Z3_BOOL_SORT) : print(o, "Z3_BOOL_SORT")
    (x:Z3_INT_SORT) : print(o, "Z3_INT_SORT")
    (x:Z3_REAL_SORT) : print(o, "Z3_REAL_SORT")
    (x:Z3_BV_SORT) : print(o, "Z3_BV_SORT")
    (x:Z3_ARRAY_SORT) : print(o, "Z3_ARRAY_SORT")
    (x:Z3_DATATYPE_SORT) : print(o, "Z3_DATATYPE_SORT")
    (x:Z3_RELATION_SORT) : print(o, "Z3_RELATION_SORT")
    (x:Z3_FINITE_DOMAIN_SORT) : print(o, "Z3_FINITE_DOMAIN_SORT")
    (x:Z3_FLOATING_POINT_SORT) : print(o, "Z3_FLOATING_POINT_SORT")
    (x:Z3_ROUNDING_MODE_SORT) : print(o, "Z3_ROUNDING_MODE_SORT")
    (x:Z3_SEQ_SORT) : print(o, "Z3_SEQ_SORT")
    (x:Z3_RE_SORT) : print(o, "Z3_RE_SORT")
    (x:Z3_CHAR_SORT) : print(o, "Z3_CHAR_SORT")
    (x:Z3_UNKNOWN_SORT) : print(o, "Z3_UNKNOWN_SORT")

public defmethod equal? (a:Z3_sort_kind, b:Z3_sort_kind) -> True|False :
  to-int(a) == to-int(b)

